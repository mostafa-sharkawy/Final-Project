---
- hosts: all
  become: true
  gather_facts: false

  tasks:
    # =====================
    # 1. DIRECTORY SETUP (Combined)
    # =====================
    - name: Create all required directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /mnt/docker
        - /mnt/jenkins
        - /mnt/bin
        - /etc/docker
        - /mnt/docker-config  # From second playbook

    # =====================
    # 2. JENKINS INSTALLATION (Enhanced)
    # =====================
    - name: Install Java
      apt:
        name: openjdk-17-jre
        state: present

    - name: Configure Jenkins repository
      block:
        - name: Add Jenkins repository key
          apt_key:
            url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
            state: present

        - name: Add Jenkins repository
          apt_repository:
            repo: "deb https://pkg.jenkins.io/debian-stable binary/"
            state: present
      notify: Update apt cache

    - name: Pre-configure Jenkins (from second playbook)
      copy:
        dest: /etc/default/jenkins
        content: |
          JENKINS_HOME=/mnt/jenkins
          JENKINS_WAR=/usr/share/jenkins/jenkins.war
          JENKINS_HTTP_PORT=8080

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes

    - name: Set Jenkins permissions (recurse added from first playbook)
      file:
        path: /mnt/jenkins
        owner: jenkins
        group: jenkins
        mode: '0755'
        recurse: yes

    # =====================
    # 3. DOCKER INSTALLATION (Enhanced)
    # =====================
    - name: Install Docker dependencies
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: present

    - name: Configure Docker repository
      block:
        - name: Add Docker GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker repository
          apt_repository:
            repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
            state: present
      notify: Update apt cache

    - name: Configure Docker storage (from both playbooks)
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "data-root": "/mnt/docker",
            "storage-driver": "overlay2"
          }

    - name: Install Docker components (expanded from second playbook)
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    # =====================
    # 4. DOCKER COMPOSE (Enhanced)
    # =====================
    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64"
        dest: "/mnt/bin/docker-compose"
        mode: "0755"

    - name: Create docker-compose symlink
      file:
        src: "/mnt/bin/docker-compose"
        dest: "/usr/local/bin/docker-compose"
        state: link
        force: yes

    # =====================
    # 5. USER & SYSTEM CONFIGURATION (Combined)
    # =====================
    - name: Configure user permissions
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      with_items:
        - jenkins
        - "{{ ansible_user }}"

    - name: Configure Jenkins systemd (from both playbooks)
      block:
        - name: Create override directory
          file:
            path: /etc/systemd/system/jenkins.service.d
            state: directory

        - name: Add systemd override
          copy:
            dest: /etc/systemd/system/jenkins.service.d/override.conf
            content: |
              [Service]
              Environment="JENKINS_HOME=/mnt/jenkins"
              WorkingDirectory=/mnt/jenkins

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    # =====================
    # 6. SERVICE MANAGEMENT (Enhanced)
    # =====================
    - name: Ensure services are running
      service:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
        enabled: yes
      with_items:
        - { name: docker, state: restarted }  # From second playbook
        - { name: jenkins, state: restarted }

    # =====================
    # 7. FIREWALL CONFIG (Combined)
    # =====================
    - name: Configure firewall rules
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      with_items:
        - 22
        - 8080
        - 3000
        - 9090

    - name: Enable firewall with secure defaults
      ufw:
        state: enabled
        policy: deny

    # =====================
    # 8. VERIFICATION & OUTPUT (Enhanced)
    # =====================
    - name: Verify installations
      block:
        - name: Check Docker configuration
          command: docker info | grep -E "Docker Root Dir|Storage Driver"
          register: docker_info
          changed_when: false

        - name: Check Jenkins configuration
          command: grep JENKINS_HOME /etc/default/jenkins
          register: jenkins_home
          changed_when: false

        - name: Verify Docker Compose installation
          command: docker-compose --version
          register: compose_version
          changed_when: false

        - name: Display results
          debug:
            msg:
              - "Docker Configuration:"
              - "{{ docker_info.stdout_lines | join('\n') }}"
              - "Jenkins Home: {{ jenkins_home.stdout }}"
              - "Docker Compose: {{ compose_version.stdout }}"
              - "Access URLs:"
              - "Jenkins: http://{{ ansible_host }}:8080"
              - "Docker metrics: http://{{ ansible_host }}:9323/metrics"
      ignore_errors: yes

    - name: Retrieve Jenkins admin password
      command: cat /mnt/jenkins/secrets/initialAdminPassword
      register: jenkins_password
      changed_when: false
      ignore_errors: yes

    - name: Display initial credentials
      debug:
        msg: "Jenkins Initial Admin Password: {{ jenkins_password.stdout }}"
      when: jenkins_password.stdout != ""

  handlers:
    - name: Update apt cache
      apt:
        update_cache: yes
