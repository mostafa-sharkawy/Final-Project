---
- hosts: all
  become: true
  gather_facts: false

  tasks:
    # =====================
    # 1. PREPARE /mnt STRUCTURE
    # =====================
    - name: Create /mnt directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /mnt/docker           # Docker containers/volumes
        - /mnt/jenkins          # Jenkins home
        - /mnt/bin              # For Docker Compose binary
        - /mnt/docker-config    # Docker config files

    # =====================
    # 2. JENKINS INSTALLATION (/mnt)
    # =====================
    - name: Install Java (Jenkins dependency)
      apt:
        name: openjdk-17-jre
        state: present

    - name: Add Jenkins repository
      apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present
      notify: Update apt cache

    - name: Add Jenkins repo to sources
      apt_repository:
        repo: "deb https://pkg.jenkins.io/debian-stable binary/"
        state: present
      notify: Update apt cache

    - name: Pre-configure Jenkins for /mnt
      copy:
        dest: /etc/default/jenkins
        content: |
          JENKINS_HOME=/mnt/jenkins
          JENKINS_WAR=/usr/share/jenkins/jenkins.war
          JENKINS_HTTP_PORT=8080

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes

    - name: Set Jenkins permissions
      file:
        path: /mnt/jenkins
        owner: jenkins
        group: jenkins
        mode: '0755'
        recurse: yes

    # =====================
    # 3. DOCKER INSTALLATION (/mnt)
    # =====================
    - name: Install Docker dependencies
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
        state: present
      notify: Update apt cache

    - name: Configure Docker for /mnt
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "data-root": "/mnt/docker",
            "storage-driver": "overlay2"
          }

    - name: Install Docker components
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    # =====================
    # 4. DOCKER COMPOSE (/mnt)
    # =====================
    - name: Install Docker Compose to /mnt
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64"
        dest: "/mnt/bin/docker-compose"
        mode: "0755"

    - name: Create symlink for docker-compose
      file:
        src: /mnt/bin/docker-compose
        dest: /usr/local/bin/docker-compose
        state: link
        force: yes

    # =====================
    # 5. FINAL CONFIGURATION
    # =====================
    - name: Add users to docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      with_items:
        - jenkins
        - "{{ ansible_user }}"

    - name: Create systemd override for Jenkins
      block:
        - name: Create override directory
          file:
            path: /etc/systemd/system/jenkins.service.d
            state: directory

        - name: Add override config
          copy:
            dest: /etc/systemd/system/jenkins.service.d/override.conf
            content: |
              [Service]
              Environment="JENKINS_HOME=/mnt/jenkins"
              WorkingDirectory=/mnt/jenkins

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    # =====================
    # 6. START SERVICES
    # =====================
    - name: Enable and start services
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - docker
        - jenkins

    # =====================
    # 7. FIREWALL CONFIG
    # =====================
    - name: Configure firewall
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      with_items:
        - 22
        - 8080
        - 3000
        - 9090

    - name: Enable firewall
      ufw:
        state: enabled
        policy: deny

    # =====================
    # 8. VERIFICATION
    # =====================
    - name: Verify Docker storage
      command: docker info | grep "Docker Root Dir"
      register: docker_root
      changed_when: false

    - name: Verify Jenkins home
      command: grep JENKINS_HOME /etc/default/jenkins
      register: jenkins_home
      changed_when: false

    - name: Show installation results
      debug:
        msg:
          - "Docker Root: {{ docker_root.stdout }}"
          - "Jenkins Home: {{ jenkins_home.stdout }}"
          - "Docker Compose: /mnt/bin/docker-compose"
          - "Jenkins URL: http://{{ ansible_host }}:8080"

    - name: Get Jenkins admin password
      command: cat /mnt/jenkins/secrets/initialAdminPassword
      register: jenkins_password
      changed_when: false
      ignore_errors: yes

    - name: Display Jenkins password
      debug:
        msg: "Initial Admin Password: {{ jenkins_password.stdout }}"
      when: jenkins_password.stdout != ""

  handlers:
    - name: Update apt cache
      apt:
        update_cache: yes
