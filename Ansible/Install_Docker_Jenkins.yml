---
- hosts: all
  become: true
  gather_facts: false

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes

    # Docker Installation on /mnt
    - name: Create /mnt directories structure
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /mnt/docker
        - /mnt/bin
        - /mnt/jenkins  # Create directory first without user ownership

    # Jenkins Installation
    - name: Install Java (required by Jenkins)
      apt:
        name: openjdk-17-jre
        state: present

    - name: Add Jenkins repository key
      apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present

    - name: Add Jenkins repository to apt sources
      apt_repository:
        repo: deb https://pkg.jenkins.io/debian-stable binary/
        state: present

    - name: Install Jenkins (this creates the jenkins user)
      apt:
        name: jenkins
        state: present
        update_cache: yes

    # Now that jenkins user exists, set proper permissions
    - name: Set correct permissions for Jenkins home
      file:
        path: /mnt/jenkins
        owner: jenkins
        group: jenkins
        mode: '0755'

    - name: Update Jenkins home directory configuration
      lineinfile:
        path: /etc/default/jenkins
        regexp: "^JENKINS_HOME="
        line: "JENKINS_HOME=/mnt/jenkins"
        state: present

    # Rest of your Docker and system configuration...
    # [Keep all your existing tasks below exactly as they were]
    - name: Install required packages to allow apt over HTTPS
      apt:
        name: apt-transport-https
        state: present
        install_recommends: no

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository to apt sources
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes
    
    - name: Configure Docker daemon to use /mnt/docker
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "data-root": "/mnt/docker"
          }

    - name: Install Docker-Compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64"
        dest: "/mnt/bin/docker-compose"
        mode: "0755"

    - name: Create symlink for docker-compose
      file:
        src: /mnt/bin/docker-compose
        dest: /usr/local/bin/docker-compose
        state: link
        force: yes

    - name: Add Jenkins user to docker group
      ansible.builtin.user:
        name: jenkins
        groups: docker
        append: yes

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Start Jenkins service
      service:
        name: jenkins
        state: started
        enabled: yes

    - name: Restart Jenkins service (to apply all changes)
      service:
        name: jenkins
        state: restarted
        enabled: yes

    # Firewall configuration
    - name: Enable ufw
      ufw:
        state: enabled
      ignore_errors: yes
      become: true

    - name: Open Jenkins port (8080) in firewall
      ufw:
        rule: allow
        port: '8080'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Open Jenkins port (3000) in firewall
      ufw:
        rule: allow
        port: '3000'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Open SSH port (22) in firewall
      ufw:
        rule: allow
        port: '22'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Open port (9090) in firewall
      ufw:
        rule: allow
        port: '9090'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Reload ufw
      command: ufw reload
      ignore_errors: yes

    # Jenkins initial setup
    - name: Get initial admin password from new location
      command: cat /mnt/jenkins/secrets/initialAdminPassword
      register: jenkins_password
      changed_when: false
      ignore_errors: yes

    - name: Fallback to check default location for initial password
      command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_password_fallback
      changed_when: false
      ignore_errors: yes
      when: jenkins_password.stdout == ""

    - name: Print Jenkins initial admin password
      debug:
        msg: "Jenkins initial admin password: {{ (jenkins_password.stdout != '') | ternary(jenkins_password.stdout, jenkins_password_fallback.stdout) }}"
      when: jenkins_password.stdout != "" or jenkins_password_fallback.stdout != ""

    - name: Print Jenkins URL 
      debug:
        msg: "Jenkins URL: http://{{ ansible_host }}:8080"
      when: jenkins_password.stdout != "" or jenkins_password_fallback.stdout != ""
